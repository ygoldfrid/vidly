{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/protectedRoute.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/searchBox.jsx","utils/paginate.js","components/common/pagination.jsx","services/movieService.js","services/genreService.js","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navbar.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["init","Sentry","dsn","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","getJwt","localStorage","getItem","email","password","a","http","data","setItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","ProtectedRoute","Component","component","render","rest","props","auth","to","pathname","state","from","location","Like","liked","onLike","onClick","className","aria-hidden","TableHeader","raiseSort","column","key","sortColumn","path","order","onSort","renderSortIcon","this","columns","map","label","TableBody","renderCell","item","content","value","_","Intl","NumberFormat","format","createKey","idProperty","defaultProps","Table","MoviesTable","movie","user","addTitleColumn","isAdmin","addDeleteColumn","titleColumn","_id","title","unshift","push","onDelete","movies","ListGroup","items","textProperty","onItemSelect","selectedItem","SearchBox","onChange","type","name","placeholder","e","currentTarget","paginate","pageNumber","pageSize","startIndex","slice","take","countPages","itemsCount","Math","ceil","Pagination","currentPage","onPageChange","pagesCount","pages","range","page","movieUrl","id","getMovies","getMovie","saveMovie","body","deleteMovie","getGenres","Movies","genres","selectedGenre","searchQuery","handleLike","index","indexOf","setState","handleDelete","originalMovies","allMovies","length","filter","m","newPage","movieService","handlePageChange","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedData","filtered","toLowerCase","startsWith","orderBy","totalCount","genreService","Input","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","renderButton","disabled","renderInput","renderSelect","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","integer","min","max","history","populateGenres","populateMovie","match","params","mapToViewModel","replace","onSubmit","Customers","Rentals","NotFound","NavBar","Fragment","LoginForm","username","window","register","RegisterForm","userService","Logout","App","role","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1073112f.chunk.js","sourcesContent":["import * as Sentry from \"@sentry/browser\";\r\n\r\nfunction init() {\r\n  Sentry.init({\r\n    dsn:\r\n      \"https://ee6a252fc747429e982f1827ce73a2ad@o382445.ingest.sentry.io/5225963\",\r\n  });\r\n}\r\n\r\nfunction log(error) {\r\n  Sentry.captureException(error);\r\n  console.log(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurred\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst authEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nfunction getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nasync function login(email, password) {\r\n  const { data: jwt } = await http.post(authEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nfunction loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nfunction logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nfunction getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\n\r\nconst Like = ({ liked, onLike }) => {\r\n  return (\r\n    <i\r\n      onClick={onLike}\r\n      className={liked ? \"clickable fa fa-heart\" : \"clickable fa fa-heart-o\"}\r\n      aria-hidden=\"true\"\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (column) => {\r\n    if (column.key) return;\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === column.path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = column.path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    const value = _.get(item, column.path); //item[column.path] for nested properties\r\n    return typeof value === \"number\"\r\n      ? new Intl.NumberFormat().format(value)\r\n      : value;\r\n  };\r\n\r\n  createKey = (item, column, idProperty) => {\r\n    return item[idProperty] + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns, idProperty } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item[idProperty]}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column, idProperty)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nTableBody.defaultProps = {\r\n  idProperty: \"_id\",\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data, ...rest }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} {...rest} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onLike={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    this.addTitleColumn(user);\r\n    if (user && user.isAdmin) this.addDeleteColumn();\r\n  }\r\n\r\n  addTitleColumn(user) {\r\n    const titleColumn = { path: \"title\", label: \"Title\" };\r\n    if (user)\r\n      titleColumn.content = (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      );\r\n    this.columns.unshift(titleColumn);\r\n  }\r\n\r\n  addDeleteColumn() {\r\n    this.columns.push({\r\n      key: \"delete\",\r\n      content: (movie) => (\r\n        <button\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={() => this.props.onDelete(movie)}\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        data={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  idProperty,\r\n  onItemSelect,\r\n  selectedItem,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          key={item[idProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n          onClick={() => onItemSelect(item)}\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  idProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n\r\nexport function countPages(itemsCount, pageSize) {\r\n  return Math.ceil(itemsCount / pageSize);\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { countPages } from \"../../utils/paginate\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = countPages(itemsCount, pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination justify-content-center\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <button className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import http from \"./httpService\";\r\n\r\nconst moviesEndpoint = \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${moviesEndpoint}/${id}`;\r\n}\r\n\r\nfunction getMovies() {\r\n  return http.get(moviesEndpoint);\r\n}\r\n\r\nfunction getMovie(id) {\r\n  return http.get(movieUrl(id));\r\n}\r\n\r\nfunction saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  return http.post(moviesEndpoint, movie);\r\n}\r\n\r\nfunction deleteMovie(id) {\r\n  return http.delete(movieUrl(id));\r\n}\r\n\r\nexport default {\r\n  getMovies,\r\n  getMovie,\r\n  saveMovie,\r\n  deleteMovie,\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst genresEndpoint = \"/genres\";\r\n\r\nfunction getGenres() {\r\n  return http.get(genresEndpoint);\r\n}\r\n\r\nexport default { getGenres };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport _ from \"lodash\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport SearchBox from \"./searchBox\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate, countPages } from \"../utils/paginate\";\r\nimport movieService from \"../services/movieService\";\r\nimport genreService from \"../services/genreService\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    genres: [],\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    selectedGenre: null,\r\n    searchQuery: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await genreService.getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n\r\n    const { data: movies } = await movieService.getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movie[index] = { ...movie[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handleDelete = async (movie) => {\r\n    const originalMovies = this.state.movies;\r\n\r\n    const { movies: allMovies, currentPage, pageSize } = this.state;\r\n    const pagesCount = countPages(allMovies.length, pageSize);\r\n    const movies = allMovies.filter((m) => m._id !== movie._id);\r\n    const newPage =\r\n      movies.length &&\r\n      currentPage === pagesCount &&\r\n      movies.length % pageSize === 0\r\n        ? currentPage - 1\r\n        : currentPage;\r\n    this.setState({ movies, currentPage: newPage });\r\n\r\n    try {\r\n      await movieService.deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted\");\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      movies: allMovies,\r\n      genres,\r\n      selectedGenre,\r\n      sortColumn,\r\n      searchQuery,\r\n    } = this.state;\r\n    const { user } = this.props;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    if (allMovies.length === 0)\r\n      return <p>There are no movies in the database</p>;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={genres}\r\n            selectedItem={selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link to=\"/movies/new\" className=\"btn btn-primary m-bottom\">\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in the database</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            sortColumn={sortColumn}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} id={name} name={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select className=\"form-control\" id={name} name={name} {...rest}>\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton = (label) => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        name={name}\r\n        label={label}\r\n        type={type}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        options={options}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport movieService from \"../services/movieService\";\r\nimport genreService from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    errors: {},\r\n    genres: [],\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .integer()\r\n      .min(0)\r\n      .max(100)\r\n      .required()\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .min(0)\r\n      .max(10)\r\n      .required()\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await genreService.getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const { id } = this.props.match.params;\r\n      if (id === \"new\") return;\r\n\r\n      const { data: movie } = await movieService.getMovie(id);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await movieService.saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>404 Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().min(3).required().label(\"Username\"),\r\n    password: Joi.string().min(3).required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { username, password } = this.state.data;\r\n      await auth.login(username, password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst usersEndpoint = \"/users\";\r\n\r\nfunction register(user) {\r\n  return http.post(usersEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n\r\nexport default { register };\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navbar\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main role=\"main\" className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport logger from \"./services/logService\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./index.css\";\n\nlogger.init();\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}